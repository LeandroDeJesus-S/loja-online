# Generated by Django 5.1.2 on 2024-10-13 23:48

import django.core.validators
import django.db.models.deletion
import utils.support.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'invalid': 'The name of the category is invalid.'}, help_text='The name must be alphanumeric separated by spaces or _', max_length=45, validators=[django.core.validators.RegexValidator('^[\\w ]+$', 'The name of the category is invalid.')], verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'invalid': 'the name of the product is invalid.'}, help_text='min 2, max 45. Letters, numbers, spaces and _', max_length=45, unique=True, validators=[django.core.validators.MinLengthValidator(2, '`nome` must have between `2` and `45` characters.'), django.core.validators.RegexValidator('^[\\w ]+$', 'the name of the product is invalid.')], verbose_name='Nome')),
                ('slug', models.SlugField(blank=True, editable=False, unique=True)),
                ('thumbnail', models.ImageField(upload_to='products/thumbs/%Y-%m', validators=[django.core.validators.validate_image_file_extension, utils.support.validators.FileSizeValidator(msg='the file size is too big.', size=5120)])),
                ('description', models.TextField(blank=True, help_text='Max 500 char.', max_length=500, verbose_name='Descrição')),
                ('categories', models.ManyToManyField(related_name='cat_products', related_query_name='cat_product', to='products.category', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
            },
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True, validators=[django.core.validators.RegexValidator('^[\\w ]+$')], verbose_name='Nome')),
                ('size', models.CharField(help_text='Ex.: G, GG, XGG', max_length=4, validators=[django.core.validators.RegexValidator('^[\\w ]+$')], verbose_name='Tamanho')),
                ('color', models.CharField(help_text='only letters and spaces, without accents (Ex.: blue and pink)', max_length=20, validators=[django.core.validators.RegexValidator('^[A-Za-z ]+$')], verbose_name='Cor')),
                ('slug', models.SlugField(blank=True, editable=False, unique=True)),
                ('price', models.DecimalField(decimal_places=2, error_messages={'invalid': 'invalid product price.'}, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Preço')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Variação',
                'verbose_name_plural': 'Variações',
            },
        ),
    ]
