# Generated by Django 5.1.2 on 2024-10-13 23:48

import django.core.validators
import django.db.models.deletion
import utils.support.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'invalid': 'the store name is invalid'}, max_length=45, unique=True, validators=[django.core.validators.RegexValidator('^[\\w ]+$', 'the store name is invalid'), django.core.validators.MinLengthValidator(2, '`nome` must have between `2` and `45` characters.')], verbose_name='Nome')),
                ('slogan', models.CharField(help_text='max: 100 chars.', max_length=100, unique=True)),
                ('logo', models.ImageField(help_text='Max: 5KB', upload_to='store/logos', validators=[utils.support.validators.FileSizeValidator(msg='the file size is too big.', size=5120)])),
                ('cnpj', models.CharField(error_messages={'invalid': 'the CPJ is invalid.'}, max_length=14, validators=[django.core.validators.RegexValidator('^\\d+$', 'the CPJ is invalid.', 'invalid'), django.core.validators.MinLengthValidator(14, 'the CPJ is invalid.'), utils.support.validators.validate_cnpj])),
            ],
            options={
                'verbose_name': 'Loja',
                'verbose_name_plural': 'Lojas',
            },
        ),
        migrations.CreateModel(
            name='StoreHasProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd', models.PositiveIntegerField(default=0, verbose_name='Estoque')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productvariation', verbose_name='Produto')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.store', verbose_name='Loja')),
            ],
            options={
                'verbose_name': 'Loja com produto adquirido',
                'verbose_name_plural': 'Lojas com produto adquirido',
            },
        ),
        migrations.AddField(
            model_name='store',
            name='products',
            field=models.ManyToManyField(related_name='product_stores', related_query_name='product_store', through='store.StoreHasProductVariation', to='products.productvariation'),
        ),
    ]
